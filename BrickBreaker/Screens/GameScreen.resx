<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="gameTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pauseButton.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>